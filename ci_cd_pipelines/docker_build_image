pipeline {
    agent any
    environment {
        DOCKER_REGISTRY = 'docker.io'
        DOCKER_IMAGE = 'packer-ansible-image'
        DOCKER_TAG = 'latest'
        GIT_REPO = 'https://gitlab.techlab.janrain.net/gitlab-instance-3471579a/docker_ami_aws.git'
        GIT_CREDENTIALS_ID = 'db666873-841e-412f-b7b0-140222b5b6af'
        DOCKER_CREDENTIALS_ID = 'docker-credentials-id'
    }
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM',
                          branches: [[name: '*/main']],
                          userRemoteConfigs: [[url: env.GIT_REPO, credentialsId: env.GIT_CREDENTIALS_ID]]])
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: env.DOCKER_CREDENTIALS_ID, passwordVariable: 'DOCKER_TOKEN', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh """
                        echo "$DOCKER_TOKEN" | docker login $DOCKER_REGISTRY -u "$DOCKER_USERNAME" --password-stdin
                        docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .
                       
                        """
					}
				}
			}
		}
        stage('Push to Docker Registry') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: env.DOCKER_CREDENTIALS_ID, passwordVariable: 'DOCKER_TOKEN', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh """
                        echo $DOCKER_TOKEN | docker login ${DOCKER_REGISTRY} -u $DOCKER_USERNAME --password-stdin
                        docker push ${DOCKER_USERNAME}/${DOCKER_IMAGE}:${DOCKER_TAG}
                        """
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
